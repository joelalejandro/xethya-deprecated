(function(){"use strict";Bridge.define("Xethya.DiceRolling.DiceThrow",{config:{properties:{_Dice:null}},constructor:function(numberOfDices,maxNumber){this.set_Dice(new Bridge.List$1(Xethya.DiceRolling.Dice)());for(var d=0;d<numberOfDices;d++)this.get_Dice().add(new Xethya.DiceRolling.Dice(maxNumber))},roll:function(){var dtr=new Xethya.DiceRolling.DiceThrowResult;return dtr.setRolls(Bridge.Linq.Enumerable.from(this.get_Dice()).select($_.Xethya.DiceRolling.DiceThrow.f1).toList(Bridge.Int)),dtr}});var $_={};Bridge.ns("Xethya.DiceRolling.DiceThrow",$_);Bridge.apply($_.Xethya.DiceRolling.DiceThrow,{f1:function(d){return d.roll()}});Bridge.define("Xethya.DiceRolling.DiceThrowResult",{config:{properties:{Rolls:null}},constructor:function(){this.setRolls(new Bridge.List$1(Bridge.Int)())},getRollSum:function(){return Bridge.Linq.Enumerable.from(this.getRolls()).sum()}});Bridge.define("Xethya.DiceRolling.ChanceThrowSettings",{config:{properties:{FailureRange:null,SuccessRange:null,CriticalSuccessRange:null}},constructor:function(){this.setFailureRange(new Xethya.Common.ValueInterval(1,20));this.setSuccessRange(new Xethya.Common.ValueInterval(21,90));this.setCriticalSuccessRange(new Xethya.Common.ValueInterval(91,100))},constructor$2:function(failureRange,successRange,criticalSuccessRange){this.setFailureRange(failureRange);this.setSuccessRange(successRange);this.setCriticalSuccessRange(criticalSuccessRange)},constructor$1:function(failureLowerBound,failureUpperBound,successLowerBound,successUpperBound,criticalSuccessLowerBound,criticalSuccessUpperBound){this.setFailureRange(new Xethya.Common.ValueInterval(failureLowerBound,failureUpperBound));this.setSuccessRange(new Xethya.Common.ValueInterval(successLowerBound,successUpperBound));this.setCriticalSuccessRange(new Xethya.Common.ValueInterval(criticalSuccessLowerBound,criticalSuccessUpperBound))}});Bridge.define("Xethya.DiceRolling.Dice",{_Faces:0,constructor:function(faces){if(faces<2)throw new Bridge.Exception("A dice must have at least two faces.");this._Faces=faces},getFaces:function(){return this._Faces},roll:function(){var mt=new Xethya.Common.Randomness.MersenneTwister;try{return Bridge.Int.trunc(Math.ceil(mt.generateRandom()*this.getFaces()))}finally{Bridge.hasValue(mt)&&mt.dispose()}}});Bridge.define("Xethya.DiceRolling.DiceThrowType",{statics:{failure:0,normal:1,critical:2},$enum:!0});Bridge.define("Xethya.DiceRolling.ChanceThrow",{inherits:[Xethya.DiceRolling.DiceThrow],config:{properties:{_Settings:null}},constructor:function(){Xethya.DiceRolling.DiceThrow.prototype.$constructor.call(this,1,100);this.set_Settings(new Xethya.DiceRolling.ChanceThrowSettings("constructor"))},constructor$1:function(settings){Xethya.DiceRolling.DiceThrow.prototype.$constructor.call(this,1,100);this.set_Settings(settings)},roll$1:function(){var diceThrow=Xethya.DiceRolling.DiceThrow.prototype.roll.call(this),ctr=new Xethya.DiceRolling.ChanceThrowResult(diceThrow);return this.get_Settings().getFailureRange().valueInRange(diceThrow.getRollSum())?ctr.setThrowType(Xethya.DiceRolling.DiceThrowType.failure):this.get_Settings().getSuccessRange().valueInRange(diceThrow.getRollSum())?ctr.setThrowType(Xethya.DiceRolling.DiceThrowType.normal):this.get_Settings().getCriticalSuccessRange().valueInRange(diceThrow.getRollSum())&&ctr.setThrowType(Xethya.DiceRolling.DiceThrowType.critical),ctr}});Bridge.define("Xethya.DiceRolling.ChanceThrowResult",{inherits:[Xethya.DiceRolling.DiceThrowResult],config:{properties:{ThrowType:0}},constructor:function(throwResult){Xethya.DiceRolling.DiceThrowResult.prototype.$constructor.call(this);this.getRolls().addRange(throwResult.getRolls())}});Bridge.define("Xethya.DiceRolling.CoinFlip",{inherits:[Xethya.DiceRolling.Dice],constructor:function(){Xethya.DiceRolling.Dice.prototype.$constructor.call(this,2)}});Bridge.define("Xethya.DiceRolling.SkillThrow",{inherits:[Xethya.DiceRolling.ChanceThrow,Xethya.Common.Interfaces.IWithModifiers],config:{properties:{SkillBeingThrown:null,Modifiers:null}},constructor:function(skill){Xethya.DiceRolling.ChanceThrow.prototype.$constructor.call(this);this.setSkillBeingThrown(skill)},getModifierSum:function(){return Bridge.Linq.Enumerable.from(this.getModifiers()).sum($_.Xethya.DiceRolling.SkillThrow.f1)},roll$2:function(){var result=this.roll$1();return new Xethya.DiceRolling.SkillThrowResult(this.getSkillBeingThrown().getComputedValue(),this.getModifierSum(),result)}});Bridge.ns("Xethya.DiceRolling.SkillThrow",$_);Bridge.apply($_.Xethya.DiceRolling.SkillThrow,{f1:function(m){return m.getValue()}});Bridge.define("Xethya.DiceRolling.SkillThrowResult",{inherits:[Xethya.DiceRolling.ChanceThrowResult],config:{properties:{SkillValue:0,SkillAttributeModifiersValue:0,FailureRoll:null}},constructor:function(skillValue,skillAttributeModifiersValue,throwResult){Xethya.DiceRolling.ChanceThrowResult.prototype.$constructor.call(this,throwResult);this.setSkillValue(skillValue);this.setSkillAttributeModifiersValue(skillAttributeModifiersValue);this.getRolls().addRange(throwResult.getRolls())},getTotalRollValue:function(){return this.getSkillValue()+this.getRollSum()+this.getSkillAttributeModifiersValue()}});Bridge.init()})(this);