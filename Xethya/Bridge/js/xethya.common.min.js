(function(){"use strict";Bridge.define("Xethya.Common.Guid",{statics:{s4:function(){var mt=new Xethya.Common.Randomness.MersenneTwister;try{return Math.floor(1+mt.generateRandom()*65536).toString(16).substr(1)}finally{Bridge.hasValue(mt)&&mt.dispose()}},generate:function(){return Bridge.String.format("{0}{1}-{2}-{3}-{4}-{5}{6}{7}",Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4(),Bridge.get(Xethya.Common.Guid).s4())}}});Bridge.define("Xethya.Common.ValueInterval",{config:{properties:{UpperBound:0,LowerBound:0}},constructor:function(lowerBound,upperBound){this.setUpperBound(upperBound);this.setLowerBound(lowerBound)},valueInRange$1:function(value){return this.getLowerBound()<=value&&value<=this.getUpperBound()},valueInRange:function(value){return Bridge.Decimal(this.getLowerBound()).lte(value)&&value.lte(Bridge.Decimal(this.getUpperBound()))},toString:function(){return this.getLowerBound().toString()+"-"+this.getUpperBound().toString()}});Bridge.init()})(this);