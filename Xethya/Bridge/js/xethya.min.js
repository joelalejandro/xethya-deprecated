(function(){"use strict";Bridge.define("Xethya.App",{statics:{config:{init:function(){Bridge.ready(this.main)}},main:function(){var $t,$t1,mt,coin,dice,dices,dtr,ctr,dwarf,attribute,stat;Bridge.global.__XETHYA_DEBUG__=!0;Bridge.global.__XETHYA_VERSION__="0.1.0";Bridge.global.__XETHYA_DEBUG__&&(console.info("Xethya Engine "+Bridge.global.__XETHYA_VERSION__),console.warn("WARNING!","\tDebug mode is on. Internal methods will return private values on console."));console.groupCollapsed("Xethya Test Suite results here!");mt=new Xethya.Common.Randomness.MersenneTwister;try{console.groupCollapsed("MersenneTwister test");console.info("This test shows the generation of 'better' random numbers.");console.log("Random Integer: "+mt.generateRandomInteger().toString());console.log("Random 0-1: "+Bridge.Int.format(mt.generateRandom(),"G"));console.groupEnd()}finally{Bridge.hasValue(mt)&&mt.dispose()}for(coin=new Xethya.DiceRolling.CoinFlip,console.groupCollapsed("CoinFlip test"),console.info("This test shows a simplified dice roll algorithm to resolve boolean questions."),console.log("1: Head, 2: Tails"),console.log("Result: "+coin.roll()),console.groupEnd(),dice=new Xethya.DiceRolling.Dice(6),console.groupCollapsed("Dice(6) test"),console.info("This test rolls a d6 and shows the rolled number."),console.log("Result: "+dice.roll()),console.groupEnd(),dices=new Xethya.DiceRolling.DiceThrow(5,20),console.groupCollapsed("Dice(20), five rolls"),dtr=dices.roll(),console.info("This test rolls five d20 dices."),console.log("Numbers: "+dtr.getRolls().join(",")),console.log("Sum: "+dtr.getRollSum()),console.groupEnd(),ctr=new Xethya.DiceRolling.ChanceThrow("constructor").roll$1(),console.groupCollapsed("ChanceThrow test"),console.info("This test shows the success rate of a chance throw."),console.log(ctr),console.log("Roll sum: "+ctr.getRollSum()),console.log("Is failure? "+Bridge.Convert.toString(ctr.getThrowType()===Xethya.DiceRolling.DiceThrowType.failure)),console.log("Is success? "+Bridge.Convert.toString(ctr.getThrowType()===Xethya.DiceRolling.DiceThrowType.normal)),console.log("Is critical success? "+Bridge.Convert.toString(ctr.getThrowType()===Xethya.DiceRolling.DiceThrowType.critical)),console.groupEnd(),dwarf=new Xethya.Player(Bridge.get(Xethya.Common.Gamebook.RaceDefinitions).getDwarf()),dwarf.setName("Joel"),Xethya.Entities.AttributeExtensions.rollAllValues(dwarf.getAttributes()),console.groupCollapsed("Player test"),console.info("This test shows a fully-featured Player entity."),console.log(dwarf),$t=Bridge.getEnumerator(dwarf.getAttributes());$t.moveNext();)attribute=$t.getCurrent(),console.log(attribute.getName()+": "+attribute);for($t1=Bridge.getEnumerator(dwarf.getStats());$t1.moveNext();)stat=$t1.getCurrent(),console.log(stat.getName()+": "+stat);console.groupEnd();console.groupEnd()}}});Bridge.define("Xethya.Player",{inherits:[Xethya.Entities.LivingEntity],constructor:function(race){Xethya.Entities.LivingEntity.prototype.$constructor.call(this,race)}});Bridge.init()})(this);